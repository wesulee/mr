#pragma once

#include "sdl_header.h"
#include <string>


struct Font {
	Font() = default;
	Font(const std::string&, const int);
	~Font() = default;
	bool operator==(const Font&) const;

	static const std::string DEFAULT;
	static const std::string DEFAULT_MONO;
	static const int DEFAULT_SIZE = 14;
	std::string name;
	int size = 0;
};


// the text message texture generated by ResourceManager
class TextImage {
	friend class Canvas;
	TextImage(const TextImage&) = delete;
	void operator=(const TextImage&) = delete;
public:
	TextImage() = default;
	TextImage(SDL_Texture*, const int, const int);
	~TextImage();

	int getWidth(void) const;
	int getHeight(void) const;
	bool empty(void) const;
private:
	SDL_Texture* tex = nullptr;
	int width = 0;
	int height = 0;
};


inline
bool Font::operator==(const Font& o) const {
	return (
		(name == o.name)
		&& (size == o.size)
	);
}
